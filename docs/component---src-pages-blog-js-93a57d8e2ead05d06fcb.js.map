{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/Bio.js"],"names":["Article","BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMdx","edges","location","keywords","map","node","frontmatter","fields","slug","key","to","date","dangerouslySetInnerHTML","__html","excerpt","React","Component","pageQuery","bioQuery","Bio","query","author","social","style","display","marginBottom","marginTop","fixed","avatar","childImageSharp","alt","marginRight","minWidth","borderRadius","href","twitter"],"mappings":"gNAQA,IAAMA,EAAU,YAAO,UAAP,sBAAH,uQAuBPC,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,OAAOC,MAE1B,OACE,YAAC,IAAD,CAAQC,SAAUT,KAAKC,MAAMQ,SAAUJ,MAAOH,GAC5C,YAAC,IAAD,CACEG,MAAM,YACNK,SAAU,CAAC,OAAD,iCAGXJ,EAAMK,IAAI,YAAe,IAAZC,EAAW,EAAXA,KACNP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KACpD,OACE,YAACnB,EAAD,CAASoB,IAAKJ,EAAKE,OAAOC,MACxB,sBACE,YAAC,IAAD,CAAME,GAAIL,EAAKE,OAAOC,MACnBV,IAGL,yBAAQO,EAAKC,YAAYK,MACzB,iBAAGC,wBAAyB,CAAEC,OAAQR,EAAKS,cAIjD,YAAC,IAAD,Q,GA3BgBC,IAAMC,WAiCf1B,YAER,IAAM2B,EAAS,c,6FCtBtB,IAAMC,EAAQ,aAoBCC,IA3Df,WACE,OACE,YAAC,IAAD,CACEC,MAAOF,EACP3B,OAAQ,SAAAC,GAAS,IAAD,EACaA,EAAKI,KAAKC,aAA7BwB,EADM,EACNA,OAAQC,EADF,EACEA,OAChB,OACE,mBACEC,MAAO,CACLC,QAAQ,OACRC,aAAc,SACdC,UAAW,SAGb,YAAC,IAAD,CACEC,MAAOnC,EAAKoC,OAAOC,gBAAgBF,MACnCG,IAAKT,EACLE,MAAO,CACLQ,YAAa,SACbN,aAAc,EACdO,SAAU,GACVC,aAAa,UAGjB,mCACa,0BAASZ,GADtB,+CAIE,iBAAGa,KAAI,uBAAyBZ,EAAOa,SAAvC,uCA1BV,W","file":"component---src-pages-blog-js-93a57d8e2ead05d06fcb.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Bio from '../components/Bio'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\n\nconst Article = styled('article')`\nmargin-bottom: 0.5em;\npadding-bottom: 0.5rem;\n\nh3 {\n  margin-Bottom: .5rem;\n  text-align: left;\n}\n\nh3 a {\n  color: #591a8b;\n  padding: 0 0.125rem;\n  transition: all 150ms linear;\n  text-decoration: none;\n  &:focus,\n  &:active,\n  &:hover {\n    color: #380f6b;\n    text-decoration: underline;\n  }\n}\n`\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMdx.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <Article key={node.fields.slug}>\n              <h3>\n                <Link to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </Article>\n          )\n        })}\n        <Bio />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Image from 'gatsby-image'\n\n\nfunction Bio() {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author, social } = data.site.siteMetadata\n        return (\n          <div\n            style={{\n              display: `flex`,\n              marginBottom: '2.0rem',\n              marginTop: '3rem',\n            }}\n          >\n            <Image\n              fixed={data.avatar.childImageSharp.fixed}\n              alt={author}\n              style={{\n                marginRight: '0.5rem',\n                marginBottom: 0,\n                minWidth: 50,\n                borderRadius: `100%`,\n              }}\n            />\n            <p>\n              Written by <strong>{author}</strong> who lives and works in\n              Southern Oregon.\n              {` `}\n              <a href={`https://twitter.com/${social.twitter}`}>\n                You should follow him on Twitter\n              </a>\n            </p>\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}